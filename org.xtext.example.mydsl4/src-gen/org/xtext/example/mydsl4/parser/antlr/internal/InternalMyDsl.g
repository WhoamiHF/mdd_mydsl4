/*
 * generated by Xtext 2.36.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl4.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl4.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl4.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getStatementsTeam_goal_or_taskParserRuleCall_0_0());
				}
				lv_statements_0_0=ruleTeam_goal_or_task
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"statements",
						lv_statements_0_0,
						"org.xtext.example.mydsl4.MyDsl.Team_goal_or_task");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSimulateSimulateStatementParserRuleCall_1_0());
				}
				lv_simulate_1_0=ruleSimulateStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"simulate",
						lv_simulate_1_0,
						"org.xtext.example.mydsl4.MyDsl.SimulateStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTeam_goal_or_task
entryRuleTeam_goal_or_task returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTeam_goal_or_taskRule()); }
	iv_ruleTeam_goal_or_task=ruleTeam_goal_or_task
	{ $current=$iv_ruleTeam_goal_or_task.current; }
	EOF;

// Rule Team_goal_or_task
ruleTeam_goal_or_task returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTeam_goal_or_taskAccess().getTeamDefinitionParserRuleCall_0());
		}
		this_TeamDefinition_0=ruleTeamDefinition
		{
			$current = $this_TeamDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTeam_goal_or_taskAccess().getGoalDefinitionParserRuleCall_1());
		}
		this_GoalDefinition_1=ruleGoalDefinition
		{
			$current = $this_GoalDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTeam_goal_or_taskAccess().getTaskDefinitionParserRuleCall_2());
		}
		this_TaskDefinition_2=ruleTaskDefinition
		{
			$current = $this_TaskDefinition_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTeamDefinition
entryRuleTeamDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTeamDefinitionRule()); }
	iv_ruleTeamDefinition=ruleTeamDefinition
	{ $current=$iv_ruleTeamDefinition.current; }
	EOF;

// Rule TeamDefinition
ruleTeamDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Team'
		{
			newLeafNode(otherlv_0, grammarAccess.getTeamDefinitionAccess().getTeamKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTeamDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTeamDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTeamDefinitionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTeamDefinitionAccess().getRobotsRobotDefinitionParserRuleCall_3_0());
				}
				lv_robots_3_0=ruleRobotDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTeamDefinitionRule());
					}
					add(
						$current,
						"robots",
						lv_robots_3_0,
						"org.xtext.example.mydsl4.MyDsl.RobotDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTeamDefinitionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRobotDefinition
entryRuleRobotDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotDefinitionRule()); }
	iv_ruleRobotDefinition=ruleRobotDefinition
	{ $current=$iv_ruleRobotDefinition.current; }
	EOF;

// Rule RobotDefinition
ruleRobotDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Robot'
		{
			newLeafNode(otherlv_0, grammarAccess.getRobotDefinitionAccess().getRobotKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRobotDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRobotDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='at'
		{
			newLeafNode(otherlv_2, grammarAccess.getRobotDefinitionAccess().getAtKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getRobotDefinitionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_x_4_0=RULE_INT
				{
					newLeafNode(lv_x_4_0, grammarAccess.getRobotDefinitionAccess().getXINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRobotDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getRobotDefinitionAccess().getCommaKeyword_5());
		}
		(
			(
				lv_y_6_0=RULE_INT
				{
					newLeafNode(lv_y_6_0, grammarAccess.getRobotDefinitionAccess().getYINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRobotDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getRobotDefinitionAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleGoalDefinition
entryRuleGoalDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoalDefinitionRule()); }
	iv_ruleGoalDefinition=ruleGoalDefinition
	{ $current=$iv_ruleGoalDefinition.current; }
	EOF;

// Rule GoalDefinition
ruleGoalDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Goal'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoalDefinitionAccess().getGoalKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGoalDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='at'
		{
			newLeafNode(otherlv_2, grammarAccess.getGoalDefinitionAccess().getAtKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getGoalDefinitionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				lv_x_4_0=RULE_INT
				{
					newLeafNode(lv_x_4_0, grammarAccess.getGoalDefinitionAccess().getXINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getGoalDefinitionAccess().getCommaKeyword_5());
		}
		(
			(
				lv_y_6_0=RULE_INT
				{
					newLeafNode(lv_y_6_0, grammarAccess.getGoalDefinitionAccess().getYINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getGoalDefinitionAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleTaskDefinition
entryRuleTaskDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskDefinitionRule()); }
	iv_ruleTaskDefinition=ruleTaskDefinition
	{ $current=$iv_ruleTaskDefinition.current; }
	EOF;

// Rule TaskDefinition
ruleTaskDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Task'
		{
			newLeafNode(otherlv_0, grammarAccess.getTaskDefinitionAccess().getTaskKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTaskDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='if'
			{
				newLeafNode(otherlv_2, grammarAccess.getTaskDefinitionAccess().getIfKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskDefinitionAccess().getConditionConditionParserRuleCall_2_1_0());
					}
					lv_condition_3_0=ruleCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskDefinitionRule());
						}
						set(
							$current,
							"condition",
							lv_condition_3_0,
							"org.xtext.example.mydsl4.MyDsl.Condition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTaskDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTaskDefinitionAccess().getStatementsTaskStatementParserRuleCall_4_0());
				}
				lv_statements_5_0=ruleTaskStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaskDefinitionRule());
					}
					add(
						$current,
						"statements",
						lv_statements_5_0,
						"org.xtext.example.mydsl4.MyDsl.TaskStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getTaskDefinitionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getTeamTeamDefinitionCrossReference_0_0());
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getRobotRobotDefinitionCrossReference_2_0());
				}
			)
		)
		otherlv_3='distanceTo'
		{
			newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getDistanceToKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getConditionAccess().getGoalGoalDefinitionCrossReference_4_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionAccess().getComparatorComparatorParserRuleCall_5_0());
				}
				lv_comparator_5_0=ruleComparator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionRule());
					}
					set(
						$current,
						"comparator",
						lv_comparator_5_0,
						"org.xtext.example.mydsl4.MyDsl.Comparator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_distance_6_0=RULE_INT
				{
					newLeafNode(lv_distance_6_0, grammarAccess.getConditionAccess().getDistanceINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
					setWithLastConsumed(
						$current,
						"distance",
						lv_distance_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleComparator
entryRuleComparator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComparatorRule()); }
	iv_ruleComparator=ruleComparator
	{ $current=$iv_ruleComparator.current.getText(); }
	EOF;

// Rule Comparator
ruleComparator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='isLessThan'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparatorAccess().getIsLessThanKeyword_0());
		}
		    |
		kw='isGreaterThan'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparatorAccess().getIsGreaterThanKeyword_1());
		}
		    |
		kw='isEqual'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparatorAccess().getIsEqualKeyword_2());
		}
	)
;

// Entry rule entryRuleTaskStatement
entryRuleTaskStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskStatementRule()); }
	iv_ruleTaskStatement=ruleTaskStatement
	{ $current=$iv_ruleTaskStatement.current; }
	EOF;

// Rule TaskStatement
ruleTaskStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskStatementRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTaskStatementAccess().getTeamTeamDefinitionCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getTaskStatementAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskStatementRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getTaskStatementAccess().getRobotRobotDefinitionCrossReference_1_1_0());
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTaskStatementAccess().getStatementMoveToStatementParserRuleCall_2_0_0());
					}
					lv_statement_3_0=ruleMoveToStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTaskStatementRule());
						}
						set(
							$current,
							"statement",
							lv_statement_3_0,
							"org.xtext.example.mydsl4.MyDsl.MoveToStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_4='turnOff'
			{
				newLeafNode(otherlv_4, grammarAccess.getTaskStatementAccess().getTurnOffKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleMoveToStatement
entryRuleMoveToStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveToStatementRule()); }
	iv_ruleMoveToStatement=ruleMoveToStatement
	{ $current=$iv_ruleMoveToStatement.current; }
	EOF;

// Rule MoveToStatement
ruleMoveToStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='moveTo'
		{
			newLeafNode(otherlv_0, grammarAccess.getMoveToStatementAccess().getMoveToKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveToStatementRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMoveToStatementAccess().getGoalGoalDefinitionCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSimulateStatement
entryRuleSimulateStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimulateStatementRule()); }
	iv_ruleSimulateStatement=ruleSimulateStatement
	{ $current=$iv_ruleSimulateStatement.current; }
	EOF;

// Rule SimulateStatement
ruleSimulateStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Simulate'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimulateStatementAccess().getSimulateKeyword_0());
		}
		otherlv_1='until'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimulateStatementAccess().getUntilKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimulateStatementAccess().getConditionConditionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimulateStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"org.xtext.example.mydsl4.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimulateStatementAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimulateStatementAccess().getRunsRunStatementParserRuleCall_4_0());
				}
				lv_runs_4_0=ruleRunStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimulateStatementRule());
					}
					add(
						$current,
						"runs",
						lv_runs_4_0,
						"org.xtext.example.mydsl4.MyDsl.RunStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSimulateStatementAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRunStatement
entryRuleRunStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRunStatementRule()); }
	iv_ruleRunStatement=ruleRunStatement
	{ $current=$iv_ruleRunStatement.current; }
	EOF;

// Rule RunStatement
ruleRunStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Run'
		{
			newLeafNode(otherlv_0, grammarAccess.getRunStatementAccess().getRunKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRunStatementRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRunStatementAccess().getFunctionTaskDefinitionCrossReference_1_0());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
