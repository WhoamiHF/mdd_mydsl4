/**
 * generated by Xtext 2.36.0
 */
package org.xtext.example.mydsl4.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl4.myDsl.Condition;
import org.xtext.example.mydsl4.myDsl.GoalDefinition;
import org.xtext.example.mydsl4.myDsl.MyDslPackage;
import org.xtext.example.mydsl4.myDsl.RobotDefinition;
import org.xtext.example.mydsl4.myDsl.TeamDefinition;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Condition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl4.myDsl.impl.ConditionImpl#getTeam <em>Team</em>}</li>
 *   <li>{@link org.xtext.example.mydsl4.myDsl.impl.ConditionImpl#getRobot <em>Robot</em>}</li>
 *   <li>{@link org.xtext.example.mydsl4.myDsl.impl.ConditionImpl#getGoal <em>Goal</em>}</li>
 *   <li>{@link org.xtext.example.mydsl4.myDsl.impl.ConditionImpl#getComparator <em>Comparator</em>}</li>
 *   <li>{@link org.xtext.example.mydsl4.myDsl.impl.ConditionImpl#getDistance <em>Distance</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConditionImpl extends MinimalEObjectImpl.Container implements Condition
{
  /**
   * The cached value of the '{@link #getTeam() <em>Team</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTeam()
   * @generated
   * @ordered
   */
  protected TeamDefinition team;

  /**
   * The cached value of the '{@link #getRobot() <em>Robot</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRobot()
   * @generated
   * @ordered
   */
  protected RobotDefinition robot;

  /**
   * The cached value of the '{@link #getGoal() <em>Goal</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGoal()
   * @generated
   * @ordered
   */
  protected GoalDefinition goal;

  /**
   * The default value of the '{@link #getComparator() <em>Comparator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComparator()
   * @generated
   * @ordered
   */
  protected static final String COMPARATOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComparator() <em>Comparator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComparator()
   * @generated
   * @ordered
   */
  protected String comparator = COMPARATOR_EDEFAULT;

  /**
   * The default value of the '{@link #getDistance() <em>Distance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDistance()
   * @generated
   * @ordered
   */
  protected static final int DISTANCE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDistance() <em>Distance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDistance()
   * @generated
   * @ordered
   */
  protected int distance = DISTANCE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConditionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.CONDITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TeamDefinition getTeam()
  {
    if (team != null && team.eIsProxy())
    {
      InternalEObject oldTeam = (InternalEObject)team;
      team = (TeamDefinition)eResolveProxy(oldTeam);
      if (team != oldTeam)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.CONDITION__TEAM, oldTeam, team));
      }
    }
    return team;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TeamDefinition basicGetTeam()
  {
    return team;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTeam(TeamDefinition newTeam)
  {
    TeamDefinition oldTeam = team;
    team = newTeam;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION__TEAM, oldTeam, team));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RobotDefinition getRobot()
  {
    if (robot != null && robot.eIsProxy())
    {
      InternalEObject oldRobot = (InternalEObject)robot;
      robot = (RobotDefinition)eResolveProxy(oldRobot);
      if (robot != oldRobot)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.CONDITION__ROBOT, oldRobot, robot));
      }
    }
    return robot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RobotDefinition basicGetRobot()
  {
    return robot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRobot(RobotDefinition newRobot)
  {
    RobotDefinition oldRobot = robot;
    robot = newRobot;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION__ROBOT, oldRobot, robot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GoalDefinition getGoal()
  {
    if (goal != null && goal.eIsProxy())
    {
      InternalEObject oldGoal = (InternalEObject)goal;
      goal = (GoalDefinition)eResolveProxy(oldGoal);
      if (goal != oldGoal)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.CONDITION__GOAL, oldGoal, goal));
      }
    }
    return goal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GoalDefinition basicGetGoal()
  {
    return goal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGoal(GoalDefinition newGoal)
  {
    GoalDefinition oldGoal = goal;
    goal = newGoal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION__GOAL, oldGoal, goal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getComparator()
  {
    return comparator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComparator(String newComparator)
  {
    String oldComparator = comparator;
    comparator = newComparator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION__COMPARATOR, oldComparator, comparator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDistance()
  {
    return distance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDistance(int newDistance)
  {
    int oldDistance = distance;
    distance = newDistance;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION__DISTANCE, oldDistance, distance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION__TEAM:
        if (resolve) return getTeam();
        return basicGetTeam();
      case MyDslPackage.CONDITION__ROBOT:
        if (resolve) return getRobot();
        return basicGetRobot();
      case MyDslPackage.CONDITION__GOAL:
        if (resolve) return getGoal();
        return basicGetGoal();
      case MyDslPackage.CONDITION__COMPARATOR:
        return getComparator();
      case MyDslPackage.CONDITION__DISTANCE:
        return getDistance();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION__TEAM:
        setTeam((TeamDefinition)newValue);
        return;
      case MyDslPackage.CONDITION__ROBOT:
        setRobot((RobotDefinition)newValue);
        return;
      case MyDslPackage.CONDITION__GOAL:
        setGoal((GoalDefinition)newValue);
        return;
      case MyDslPackage.CONDITION__COMPARATOR:
        setComparator((String)newValue);
        return;
      case MyDslPackage.CONDITION__DISTANCE:
        setDistance((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION__TEAM:
        setTeam((TeamDefinition)null);
        return;
      case MyDslPackage.CONDITION__ROBOT:
        setRobot((RobotDefinition)null);
        return;
      case MyDslPackage.CONDITION__GOAL:
        setGoal((GoalDefinition)null);
        return;
      case MyDslPackage.CONDITION__COMPARATOR:
        setComparator(COMPARATOR_EDEFAULT);
        return;
      case MyDslPackage.CONDITION__DISTANCE:
        setDistance(DISTANCE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION__TEAM:
        return team != null;
      case MyDslPackage.CONDITION__ROBOT:
        return robot != null;
      case MyDslPackage.CONDITION__GOAL:
        return goal != null;
      case MyDslPackage.CONDITION__COMPARATOR:
        return COMPARATOR_EDEFAULT == null ? comparator != null : !COMPARATOR_EDEFAULT.equals(comparator);
      case MyDslPackage.CONDITION__DISTANCE:
        return distance != DISTANCE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (comparator: ");
    result.append(comparator);
    result.append(", distance: ");
    result.append(distance);
    result.append(')');
    return result.toString();
  }

} //ConditionImpl
